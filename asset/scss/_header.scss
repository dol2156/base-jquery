@use 'common/' as *;
//
header {
  background-color: white;
  transition: all 300ms cubic-bezier(0.33, 1, 0.68, 1);
  will-change: auto;

  &.StickyMode {
    position: sticky;
    top: 0;
  }

  &.AutoHideMode {
    @at-root {
      html[data-scroll-top-header-over='true'][data-scroll-diretion='down'] & {
        transform: translateY(calc(-1 * var(--header-hei)));
      }
    }
  }

  &.TransparentMode {
    background-color: transparent;
    @at-root {
      // 헤더 높이 만큼 스크롤이 내려갔을때
      //html[data-scroll-top-header-over='true'] & {
      //  background-color: white;
      //}
      
      // 첫번째 섹션 만큼 스크롤이 내려갔을때
      html[data-scroll-top-first-section-over='true'] & {
        background-color: white;
      }
    }

    ~ main {
      margin-top: calc(-1 * var(--header-hei));
    }
  }
}
/**/
.HamburgerBtn {
  outline: 1px dashed red;

  --bar-width: 0.4rem;
  --bar-gap: 0.4em;

  width: 6.4rem;
  height: 6.4rem;

  position: relative;
  cursor: pointer;

  > span {
    width: 100%;
    height: var(--bar-width);
    background-color: #000;
    border-radius: calc(var(--bar-width) / 2);
    position: absolute;
    top: 50%;
    left: 0;
    transform: translateY(-50%);
    transition: all 300ms cubic-bezier(0.33, 1, 0.68, 1);
    will-change: auto;

    &::before,
    &::after {
      content: '';
      width: 100%;
      height: var(--bar-width);
      background-color: #000;
      border-radius: calc(var(--bar-width) / 2);
      position: absolute;
      transition: all 300ms cubic-bezier(0.33, 1, 0.68, 1);
      will-change: auto;
    }

    &::before {
      top: calc(var(--bar-width) * -1 - var(--bar-gap));
    }

    &::after {
      top: calc(var(--bar-width) + var(--bar-gap));
    }
  }

  &.On {
    > span {
      transform: translateY(calc(-1 * var(--bar-width) / 2)) rotate(45deg);
    }

    > span::before {
      transform: rotate(90deg);
      top: 0;
    }

    > span::after {
      opacity: 0;
      top: 0;
    }
  }
}
